// Script de test pour v√©rifier l'URL /categorie/slug
const axios = require('axios');

const BASE_URL = 'http://localhost:3000';
const WORDPRESS_URL = 'http://ivoir-shop.local'; // Remplacez par votre URL WordPress

async function testCategorieURL() {
  console.log('üß™ Test de l\'URL /categorie/slug...\n');

  try {
    // Test 1: V√©rifier les cat√©gories disponibles
    console.log('1Ô∏è‚É£ R√©cup√©ration des cat√©gories...');
    const categoriesResponse = await axios.get(`${BASE_URL}/api/api/v1/categories`);
    console.log(`‚úÖ ${categoriesResponse.data.length} cat√©gories trouv√©es`);
    
    // Afficher les premi√®res cat√©gories
    console.log('üìã Cat√©gories disponibles:');
    categoriesResponse.data.slice(0, 5).forEach((cat, index) => {
      console.log(`   ${index + 1}. ${cat.name} (slug: ${cat.slug}) - ${cat.count} produits`);
    });

    // Test 2: Tester l'URL /categorie/slug pour chaque cat√©gorie
    console.log('\n2Ô∏è‚É£ Test des URLs /categorie/slug...');
    
    for (const category of categoriesResponse.data.slice(0, 3)) {
      console.log(`\nüîç Test de /categorie/${category.slug}...`);
      
      try {
        const categoryPageResponse = await axios.get(`${BASE_URL}/categorie/${category.slug}`);
        console.log(`‚úÖ Page /categorie/${category.slug} accessible`);
        
        // V√©rifier le contenu de la page
        if (categoryPageResponse.data.includes(category.name)) {
          console.log(`   ‚úÖ Nom de cat√©gorie trouv√©: ${category.name}`);
        } else {
          console.log(`   ‚ö†Ô∏è  Nom de cat√©gorie non trouv√© dans la page`);
        }
        
      } catch (pageError) {
        console.log(`‚ùå Erreur pour /categorie/${category.slug}:`, pageError.message);
        if (pageError.response) {
          console.log(`   Status: ${pageError.response.status}`);
        }
      }
    }

    // Test 3: Test sp√©cifique pour "clothing"
    console.log('\n3Ô∏è‚É£ Test sp√©cifique pour "clothing"...');
    const clothingCategory = categoriesResponse.data.find(cat => 
      cat.slug === 'clothing' || cat.name.toLowerCase().includes('clothing')
    );
    
    if (clothingCategory) {
      console.log(`‚úÖ Cat√©gorie Clothing trouv√©e: ${clothingCategory.name} (${clothingCategory.slug})`);
      
      try {
        const clothingPageResponse = await axios.get(`${BASE_URL}/categorie/${clothingCategory.slug}`);
        console.log(`‚úÖ Page /categorie/${clothingCategory.slug} accessible`);
        
        // V√©rifier les produits
        const productsMatch = clothingPageResponse.data.match(/class="[^"]*grid[^"]*"/g);
        if (productsMatch) {
          console.log(`   ‚úÖ Grille de produits d√©tect√©e`);
        } else {
          console.log(`   ‚ö†Ô∏è  Aucune grille de produits d√©tect√©e`);
        }
        
      } catch (clothingError) {
        console.log(`‚ùå Erreur pour /categorie/${clothingCategory.slug}:`, clothingError.message);
      }
    } else {
      console.log('‚ùå Cat√©gorie Clothing non trouv√©e');
      console.log('üí° Cr√©ez une cat√©gorie avec le slug "clothing" dans WordPress');
    }

    // Test 4: Test de l'endpoint API directement
    console.log('\n4Ô∏è‚É£ Test de l\'endpoint API /api/woocommerce/category/...');
    
    if (clothingCategory) {
      try {
        const apiResponse = await axios.get(`${BASE_URL}/api/woocommerce/category/${clothingCategory.slug}`);
        console.log(`‚úÖ Endpoint API accessible pour ${clothingCategory.slug}`);
        console.log(`   Cat√©gorie: ${apiResponse.data.category?.name || 'Non trouv√©e'}`);
        console.log(`   Produits: ${apiResponse.data.products?.length || 0}`);
        
        if (apiResponse.data.products?.length > 0) {
          console.log('   üì¶ Premiers produits:');
          apiResponse.data.products.slice(0, 3).forEach((product, index) => {
            console.log(`      ${index + 1}. ${product.name} - ${product.price}‚Ç¨`);
          });
        }
        
      } catch (apiError) {
        console.log(`‚ùå Erreur endpoint API:`, apiError.message);
        if (apiError.response) {
          console.log(`   Status: ${apiError.response.status}`);
          console.log(`   Data:`, apiError.response.data);
        }
      }
    }

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error.message);
    if (error.response) {
      console.error('   Status:', error.response.status);
      console.error('   Data:', error.response.data);
    }
  }
}

// Ex√©cuter le test
testCategorieURL();

